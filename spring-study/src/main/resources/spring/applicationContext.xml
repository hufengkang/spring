<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">


	<import resource="classpath:spring-redis.xml"/>
	
	<!-- 扫描除Controller以外的所有注解 -->
	<context:component-scan base-package="cn.zero">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<context:property-placeholder location="classpath:dbconfig.properties" />
	
	<!-- 数据源 -->
	<bean id="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		destroy-method="close">
		<property name="username" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClassName" value="${jdbc.driverClass}"></property>
		<property name="url" value="${jdbc.jdbcUrl}"></property>
		<!-- 初始化连接数 -->
		<property name="initialSize" value="${jdbc.initialSize}"></property>
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="1"></property>
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="${jdbc.maxActive}"></property>
	</bean>

	<!-- spring和mybatis整合 -->
	<bean id="sqlSessionFactoryBean"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 全局配置文件 -->
		<property name="configLocation"
			value="classpath:mybatis/SqlMapConfig.xml"></property>
		<!-- 指定mybatis的mapper文件的位置 -->
		<property name="mapperLocations"
			value="classpath:mybatis/mapper/*.xml"></property>
	</bean>

	<!-- 配置扫描器,将mybatis接口的实现加入到IOC容器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.zero.dao"></property>
	</bean>

	<!-- 事务控制 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<!-- xml配置形式的事务(主要使用配置的方式) -->
	<aop:config>
		<!-- 切点表达式 -->
		<aop:pointcut
			expression="execution(* cn.zero.service.*.*(..))" id="txPoint" />
		<!-- 事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>

	<!-- 配置事务增强,事务如何切入 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 所有方法都是事务方法 -->
			<tx:method name="*" rollback-for="Throwable" />
			<!-- 以select开始的所有方法 -->
			<tx:method name="select*" read-only="true" />
		</tx:attributes>
	</tx:advice>

</beans>
